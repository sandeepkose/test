name: Release Build

on:
  push:
    branches: ["**"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CACHE_VERSION: 1
  AWS_DEFAULT_REGION: eu-central-1
  SERVICE_NAME: invoice-extractor
  AWS_SG_ID: sg-0c55dbe5d388c7c3b


jobs:
  build-push:
    name: Test, Build, and Push Docker Image
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

  # https://kamrul.dev/dynamically-add-github-actions-ip-to-aws-security-group/
  deploy-on-server:
    name: Deploy docker on production server
    runs-on: self-hosted
#    container:
#      image: ubuntu:24.04
    steps:
    - name: Fix workspace permissions before checkout
      run: |
        sudo chown -R $(id -u):$(id -g) ${{ github.workspace }}
    - name: Checkout code
      uses: actions/checkout@v5

    # âœ… Setup SSH key FIRST
    - name: Set up SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.DEPLOY_SSH_KEY }}" > ./id_rsa
        chmod 600 ./id_rsa 


    - name: Run everything inside IPv6-enabled container
      run: |
        docker run --rm \
          -v "$PWD":/workspace \
          -w /workspace \
          -e AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          -e AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          -e AWS_DEFAULT_REGION="${{ env.AWS_DEFAULT_REGION }}" \
          -e AWS_SG_ID="${{ env.AWS_SG_ID }}" \
          ubuntu:24.04 bash -c '
            set -e
            ls -la

            echo "Installing dependencies..."
            #apt-get update
            #apt-get install -y curl unzip openssh-client

            ssh -o StrictHostKeyChecking=no -i ./id_rsa \
            ubuntu@2a05:d014:1e87:d860:a3b4:d7da:cbd6:b189 sudo -i <<EOF

            # Login into ghcr
            echo "${{ secrets.PROD_GHCR_ACCESS_TOKEN }}" | sudo docker login ghcr.io -u "${{ secrets.PROD_GHCR_USERNAME }}" --password-stdin

            # Write environment file for docker
            # General details
            echo "SECRET_KEY_BASE=${{ secrets.PROD_SECRET_KEY_BASE }}" >> /home/ubuntu/.env
            EOF
          
          '
